// Code generated by github.com/sergei-svistunov/go-ssr. DO NOT EDIT.

package add

import (
	"context"
	"io"

	"github.com/sergei-svistunov/go-ssr/pkg/mux"
)

type RouteData struct {
	Age         FormValue
	Description FormValue
	FormError   string
	Login       FormValue
	Name        FormValue
}

type RouteDataProvider interface {
	GetRouteUsersAddData(ctx context.Context, r *mux.Request, w mux.ResponseWriter, data *RouteData) error
}

type Route[DataProvider RouteDataProvider] struct{}

func (Route[DataProvider]) GetDataContext(ctx context.Context, r *mux.Request, w mux.ResponseWriter, dp DataProvider, child mux.DataContext) (mux.DataContext, error) {
	var (
		dataCtx = &dataContext{RouteDataContext: mux.RouteDataContext{
			Child:  child,
			Assets: []string{},
		}}
	)
	if err := dp.GetRouteUsersAddData(ctx, r, w, &dataCtx.RouteData); err != nil {
		return nil, err
	}
	return dataCtx, nil
}

func (Route[DataProvider]) GetDefaultSubRoute(ctx context.Context, r *mux.Request, dp DataProvider) (string, error) {
	return "", nil
}

type dataContext struct {
	mux.RouteDataContext
	RouteData
}

func (c *dataContext) Write(w io.Writer) error {
//line index.html:20
	age := c.RouteData.Age
//line index.html:28
	description := c.RouteData.Description
//line index.html:35
	formError := c.RouteData.FormError
//line index.html:4
	login := c.RouteData.Login
//line index.html:12
	name := c.RouteData.Name
	if _, err := w.Write(_3v07fs437utaqorjmf1to7oa4dg4qgql6eqgk46hqoohqqpgtrag); err != nil {
		return err
	}
//line index.html:5
	if _, err := mux.WriteHtmlEscaped(w, login.Class); err != nil {
		return err
	}
	if _, err := w.Write(_07ltiiar5t7i9hhvb78g3kmlnsggsjochku8i7699qq133u84fg0); err != nil {
		return err
	}
//line index.html:5
	if _, err := mux.WriteHtmlEscaped(w, login.Value); err != nil {
		return err
	}
	if _, err := w.Write(_vu10ijgqk88dmiq1c6ujdn9u64uglgs1qs7tcithsteb65aa5bfg); err != nil {
		return err
	}
//line index.html:8
	if login.Error != "" {
		if _, err := w.Write(_rltbj10nlgr3ugrdr83o9p9ua4nnvo19m4akesm7i3ddvbgrveq0); err != nil {
			return err
		}
//line index.html:8
		if _, err := mux.WriteHtmlEscaped(w, login.Error); err != nil {
			return err
		}
		if _, err := w.Write(_lb1ickdh1tb7ohgrjd7ianbfm7t6gmdl6q6onmd53bsi1ap1pshg); err != nil {
			return err
		}
	}
	if _, err := w.Write(_h8ibpmgnmfuh4abgjvn2c86b3v5sgrq8h8k6j437nhm9jt2n9ghg); err != nil {
		return err
	}
//line index.html:13
	if _, err := mux.WriteHtmlEscaped(w, name.Class); err != nil {
		return err
	}
	if _, err := w.Write(_m8vgff54kb6ic212svrej6m0gjgehos5her9nihqh4kgv56gtnpg); err != nil {
		return err
	}
//line index.html:13
	if _, err := mux.WriteHtmlEscaped(w, name.Value); err != nil {
		return err
	}
	if _, err := w.Write(_17o1k54vlinguq851m356rhuvl4r2iddnp5kcobv3aer25pgvu5g); err != nil {
		return err
	}
//line index.html:16
	if name.Error != "" {
		if _, err := w.Write(_rltbj10nlgr3ugrdr83o9p9ua4nnvo19m4akesm7i3ddvbgrveq0); err != nil {
			return err
		}
//line index.html:16
		if _, err := mux.WriteHtmlEscaped(w, name.Error); err != nil {
			return err
		}
		if _, err := w.Write(_lb1ickdh1tb7ohgrjd7ianbfm7t6gmdl6q6onmd53bsi1ap1pshg); err != nil {
			return err
		}
	}
	if _, err := w.Write(_6nril3ie5e8nge235t1d73pnro1qsu3e5rspkvlhbo47p2gcqmf0); err != nil {
		return err
	}
//line index.html:21
	if _, err := mux.WriteHtmlEscaped(w, age.Class); err != nil {
		return err
	}
	if _, err := w.Write(_2du86qmc600akafs48n7m3qgihfsv2lge9rpfimqa2dfsvm4oj3g); err != nil {
		return err
	}
//line index.html:21
	if _, err := mux.WriteHtmlEscaped(w, age.Value); err != nil {
		return err
	}
	if _, err := w.Write(_kilku282q10fq9q9e82eq1ddra8ie1t48qlorcdrd65c8t026o40); err != nil {
		return err
	}
//line index.html:24
	if age.Error != "" {
		if _, err := w.Write(_rltbj10nlgr3ugrdr83o9p9ua4nnvo19m4akesm7i3ddvbgrveq0); err != nil {
			return err
		}
//line index.html:24
		if _, err := mux.WriteHtmlEscaped(w, age.Error); err != nil {
			return err
		}
		if _, err := w.Write(_lb1ickdh1tb7ohgrjd7ianbfm7t6gmdl6q6onmd53bsi1ap1pshg); err != nil {
			return err
		}
	}
	if _, err := w.Write(_9vq3lhcccncj9mk5a5bokb03rkis1tvvtm19dbprp2547nf0ga6g); err != nil {
		return err
	}
//line index.html:29
	if _, err := mux.WriteHtmlEscaped(w, description.Class); err != nil {
		return err
	}
	if _, err := w.Write(_cm5ickjoon80qrmfhsqsmvigvt446kp87umkacpa5e2aic5auge0); err != nil {
		return err
	}
//line index.html:30
	if _, err := mux.WriteHtmlEscaped(w, description.Value); err != nil {
		return err
	}
	if _, err := w.Write(_pn6bji7p8ol2j8e5n4jseuql6c4mjvte2gube9a1nbtgva8p3h1g); err != nil {
		return err
	}
//line index.html:32
	if description.Error != "" {
		if _, err := w.Write(_rltbj10nlgr3ugrdr83o9p9ua4nnvo19m4akesm7i3ddvbgrveq0); err != nil {
			return err
		}
//line index.html:32
		if _, err := mux.WriteHtmlEscaped(w, description.Error); err != nil {
			return err
		}
		if _, err := w.Write(_lb1ickdh1tb7ohgrjd7ianbfm7t6gmdl6q6onmd53bsi1ap1pshg); err != nil {
			return err
		}
	}
	if _, err := w.Write(_bfoaiis0gsqdt0u9pv7l59ntvqr4b0qndll3gcr3bq7b27irfop0); err != nil {
		return err
	}
//line index.html:36
	if formError != "" {
		if _, err := w.Write(_d98iqq949bnkvl0am05us0b6jqcl7sqp3s515ehnr3vvln1ihd5g); err != nil {
			return err
		}
//line index.html:36
		if _, err := mux.WriteHtmlEscaped(w, formError); err != nil {
			return err
		}
		if _, err := w.Write(_lb1ickdh1tb7ohgrjd7ianbfm7t6gmdl6q6onmd53bsi1ap1pshg); err != nil {
			return err
		}
	}
	if _, err := w.Write(_7t56en3nf0eaqhk522q1r30jsjj3c4l5ridj64dj8q3o69sfoqng); err != nil {
		return err
	}
	return nil
}

var (
	_07ltiiar5t7i9hhvb78g3kmlnsggsjochku8i7699qq133u84fg0 = []byte{
		0x22, 0x20, 0x69, 0x64, 0x3d, 0x22, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x20, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
		0x3d, 0x22, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3d, 0x22,
	}
	_17o1k54vlinguq851m356rhuvl4r2iddnp5kcobv3aer25pgvu5g = []byte{
		0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x66, 0x6f,
		0x72, 0x3d, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x4e, 0x61, 0x6d, 0x65, 0x3c, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3e, 0x0a, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	}
	_2du86qmc600akafs48n7m3qgihfsv2lge9rpfimqa2dfsvm4oj3g = []byte{
		0x22, 0x20, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x3d, 0x22, 0x41, 0x67, 0x65, 0x22, 0x20, 0x69, 0x64, 0x3d, 0x22,
		0x61, 0x67, 0x65, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3d, 0x22,
	}
	_3v07fs437utaqorjmf1to7oa4dg4qgql6eqgk46hqoohqqpgtrag = []byte{
		0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x6f, 0x6c, 0x2d, 0x78, 0x6c, 0x2d, 0x34, 0x22, 0x3e, 0x0a, 0x20,
		0x20, 0x20, 0x20, 0x3c, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3d, 0x22, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x20, 0x63,
		0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6d, 0x74, 0x2d, 0x33, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69,
		0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6d,
		0x62, 0x2d, 0x33, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22, 0x74, 0x65, 0x78, 0x74,
		0x22, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x22, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
		0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20,
	}
	_6nril3ie5e8nge235t1d73pnro1qsu3e5rspkvlhbo47p2gcqmf0 = []byte{
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69,
		0x6e, 0x67, 0x20, 0x6d, 0x62, 0x2d, 0x33, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22,
		0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x22, 0x61, 0x67, 0x65, 0x22, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3d,
		0x22, 0x31, 0x22, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d,
		0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20,
	}
	_7t56en3nf0eaqhk522q1r30jsjj3c4l5ridj64dj8q3o69sfoqng = []byte{
		0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22,
		0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x22, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x62, 0x74, 0x6e, 0x20, 0x62, 0x74, 0x6e, 0x2d, 0x70,
		0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x3e, 0x41, 0x64, 0x64, 0x3c, 0x2f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x3e, 0x0a, 0x0a, 0x20, 0x20,
		0x20, 0x20, 0x3c, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x3e, 0x0a, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e,
	}
	_9vq3lhcccncj9mk5a5bokb03rkis1tvvtm19dbprp2547nf0ga6g = []byte{
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69,
		0x6e, 0x67, 0x20, 0x6d, 0x62, 0x2d, 0x33, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61, 0x20, 0x6e, 0x61, 0x6d,
		0x65, 0x3d, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
		0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x20,
	}
	_bfoaiis0gsqdt0u9pv7l59ntvqr4b0qndll3gcr3bq7b27irfop0 = []byte{
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	}
	_cm5ickjoon80qrmfhsqsmvigvt446kp87umkacpa5e2aic5auge0 = []byte{
		0x22, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x3d, 0x22, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x20, 0x31, 0x30, 0x30, 0x70, 0x78, 0x22, 0x20,
		0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x3d, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
		0x22, 0x20, 0x69, 0x64, 0x3d, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e,
	}
	_d98iqq949bnkvl0am05us0b6jqcl7sqp3s515ehnr3vvln1ihd5g = []byte{
		0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d,
		0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x3e,
	}
	_h8ibpmgnmfuh4abgjvn2c86b3v5sgrq8h8k6j437nhm9jt2n9ghg = []byte{
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69,
		0x6e, 0x67, 0x20, 0x6d, 0x62, 0x2d, 0x33, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22,
		0x74, 0x65, 0x78, 0x74, 0x22, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
		0x65, 0x64, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20,
	}
	_kilku282q10fq9q9e82eq1ddra8ie1t48qlorcdrd65c8t026o40 = []byte{
		0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x66, 0x6f,
		0x72, 0x3d, 0x22, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x41, 0x67, 0x65, 0x3c, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	}
	_lb1ickdh1tb7ohgrjd7ianbfm7t6gmdl6q6onmd53bsi1ap1pshg = []byte{
		0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e,
	}
	_m8vgff54kb6ic212svrej6m0gjgehos5her9nihqh4kgv56gtnpg = []byte{
		0x22, 0x20, 0x69, 0x64, 0x3d, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x3d,
		0x22, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3d, 0x22,
	}
	_pn6bji7p8ol2j8e5n4jseuql6c4mjvte2gube9a1nbtgva8p3h1g = []byte{
		0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x3c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x3d, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
		0x3e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3c, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3e, 0x0a, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	}
	_rltbj10nlgr3ugrdr83o9p9ua4nnvo19m4akesm7i3ddvbgrveq0 = []byte{
		0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2d, 0x66, 0x65, 0x65, 0x64,
		0x62, 0x61, 0x63, 0x6b, 0x22, 0x3e,
	}
	_vu10ijgqk88dmiq1c6ujdn9u64uglgs1qs7tcithsteb65aa5bfg = []byte{
		0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x66, 0x6f,
		0x72, 0x3d, 0x22, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x3e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x3c, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3e, 0x0a,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	}
)

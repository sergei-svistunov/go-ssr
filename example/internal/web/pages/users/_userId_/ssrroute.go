package _userId_

import (
	"context"
	"io"

	"github.com/sergei-svistunov/go-ssr/pkg/mux"
)

type RouteData struct {
	User         User
	UserTabClass func(string) string
}

type RouteDataProvider interface {
	GetRouteUsers_userId_Data(ctx context.Context, r *mux.Request, w mux.ResponseWriter, data *RouteData) error
}

type Route[DataProvider RouteDataProvider] struct{}

func (Route[DataProvider]) GetDataContext(ctx context.Context, r *mux.Request, w mux.ResponseWriter, dp DataProvider, child mux.DataContext) (mux.DataContext, error) {
	var (
		dataCtx = &dataContext{RouteDataContext: mux.RouteDataContext{
			Child:  child,
			Assets: []string{},
		}}
	)
	if err := dp.GetRouteUsers_userId_Data(ctx, r, w, &dataCtx.RouteData); err != nil {
		return nil, err
	}
	return dataCtx, nil
}

func (Route[DataProvider]) GetDefaultSubRoute(ctx context.Context, r *mux.Request, dp DataProvider) (string, error) {
	return "info", nil
}

type dataContext struct {
	mux.RouteDataContext
	RouteData
}

func (c *dataContext) Write(w io.Writer) error {
	user := c.RouteData.User
	userTabClass := c.RouteData.UserTabClass
	if _, err := w.Write(_8lbpke2pkr9knsncrghdsnrk6vc1477ivhr26usc398t2obit470); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Image); err != nil {
		return err
	}
	if _, err := w.Write(_2d0ca660vp2c47gph10rt485jlqjs05l0q6qod5ust4p52ioksd0); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Name); err != nil {
		return err
	}
	if _, err := w.Write(_0cf1applidg0i3a74d01m8v3aqge2fpa72uvn2ktuilkhie7u6ug); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Name); err != nil {
		return err
	}
	if _, err := w.Write(_f7o5j7s03tgk6k62gjlujh0n4n1q4mfj16jg0dnmdikiuea4k7c0); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Login); err != nil {
		return err
	}
	if _, err := w.Write(_pjuv6o4qttr0nh05926mu54msdhp5fcamnt77e1a2bhhr7ll5df0); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Age); err != nil {
		return err
	}
	if _, err := w.Write(_jucmh7jh3lhcb9m6g43be8sei5kabupl3hi9c0uj0td05vrsi9l0); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, userTabClass("/info")); err != nil {
		return err
	}
	if _, err := w.Write(_l1jh91kqdcoogat54p183v3rneo1f7psatn1undjsb6u4n4u7mo0); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Login); err != nil {
		return err
	}
	if _, err := w.Write(_1sagkur2jda5i5qfbf59jp6r7vsjb86hqmsfp9ntt9j4kc9malug); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, userTabClass("/contacts")); err != nil {
		return err
	}
	if _, err := w.Write(_l1jh91kqdcoogat54p183v3rneo1f7psatn1undjsb6u4n4u7mo0); err != nil {
		return err
	}
	if _, err := mux.WriteHtmlEscaped(w, user.Login); err != nil {
		return err
	}
	if _, err := w.Write(_duua1iseg0i5s3gvjladgvdr0ucacqg5lsgvl4r799c3irr56qd0); err != nil {
		return err
	}
	if c.Child != nil {
		err := c.Child.Write(w)
		if err != nil {
			return err
		}
	}
	if _, err := w.Write(_3ahmijatfkgnfpffa3rvpanhq95pa6debsejibtg9rba8basfma0); err != nil {
		return err
	}
	return nil
}

var (
	_0cf1applidg0i3a74d01m8v3aqge2fpa72uvn2ktuilkhie7u6ug = []byte{
		0x22, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x69, 0x6d, 0x67, 0x2d, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x20, 0x72, 0x6f, 0x75, 0x6e, 0x64,
		0x65, 0x64, 0x2d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76,
		0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x6f,
		0x6c, 0x2d, 0x6d, 0x64, 0x2d, 0x38, 0x20, 0x63, 0x6f, 0x6c, 0x2d, 0x78, 0x6c, 0x2d, 0x31, 0x30, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x61, 0x72, 0x64, 0x2d,
		0x62, 0x6f, 0x64, 0x79, 0x20, 0x68, 0x2d, 0x31, 0x30, 0x30, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x68, 0x35, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x74, 0x69, 0x74,
		0x6c, 0x65, 0x22, 0x3e, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x20,
	}
	_1sagkur2jda5i5qfbf59jp6r7vsjb86hqmsfp9ntt9j4kc9malug = []byte{
		0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x49, 0x6e, 0x66, 0x6f, 0x3c, 0x2f, 0x61, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x6c, 0x69, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6c, 0x69, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d,
		0x22, 0x6e, 0x61, 0x76, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x61, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61,
		0x76, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x20,
	}
	_2d0ca660vp2c47gph10rt485jlqjs05l0q6qod5ust4p52ioksd0 = []byte{
		0x22, 0x20, 0x61, 0x6c, 0x74, 0x3d, 0x22,
	}
	_3ahmijatfkgnfpffa3rvpanhq95pa6debsejibtg9rba8basfma0 = []byte{
		0x0a, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e,
	}
	_8lbpke2pkr9knsncrghdsnrk6vc1477ivhr26usc398t2obit470 = []byte{
		0x0a, 0x0a, 0x0a, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x61, 0x72, 0x64, 0x20, 0x6d, 0x74, 0x2d, 0x33,
		0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x72, 0x6f, 0x77, 0x20, 0x67,
		0x2d, 0x30, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d,
		0x22, 0x63, 0x6f, 0x6c, 0x2d, 0x6d, 0x64, 0x2d, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x2d, 0x78, 0x6c, 0x2d, 0x32, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69, 0x6d, 0x67, 0x20, 0x73, 0x72, 0x63, 0x3d, 0x22,
	}
	_duua1iseg0i5s3gvjladgvdr0ucacqg5lsgvl4r799c3irr56qd0 = []byte{
		0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x3e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x3c, 0x2f, 0x61, 0x3e, 0x0a,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x6c, 0x69,
		0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x75, 0x6c, 0x3e, 0x0a,
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x3c, 0x2f,
		0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6d, 0x74, 0x2d, 0x33, 0x22, 0x3e,
		0x0a, 0x20, 0x20, 0x20, 0x20,
	}
	_f7o5j7s03tgk6k62gjlujh0n4n1q4mfj16jg0dnmdikiuea4k7c0 = []byte{
		0x3c, 0x2f, 0x68, 0x35, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64,
		0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3e, 0x0a, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x75, 0x6c, 0x3e, 0x0a, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
		0x6c, 0x69, 0x3e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x20, 0x3c, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x3e,
	}
	_jucmh7jh3lhcb9m6g43be8sei5kabupl3hi9c0uj0td05vrsi9l0 = []byte{
		0x3c, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x3e, 0x3c, 0x2f, 0x6c, 0x69, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x75, 0x6c, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x75, 0x6c, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x20,
		0x6e, 0x61, 0x76, 0x2d, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x6d, 0x74, 0x2d, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x20, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x2d, 0x30, 0x22, 0x3e, 0x0a,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6c, 0x69, 0x20,
		0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x2d, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x61, 0x20, 0x63, 0x6c, 0x61,
		0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x20,
	}
	_l1jh91kqdcoogat54p183v3rneo1f7psatn1undjsb6u4n4u7mo0 = []byte{
		0x22, 0x20, 0x68, 0x72, 0x65, 0x66, 0x3d, 0x22, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	}
	_pjuv6o4qttr0nh05926mu54msdhp5fcamnt77e1a2bhhr7ll5df0 = []byte{
		0x3c, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x3e, 0x3c, 0x2f, 0x6c, 0x69, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6c, 0x69, 0x3e, 0x41, 0x67, 0x65, 0x3a, 0x20,
		0x3c, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x3e,
	}
)

// Code generated by github.com/sergei-svistunov/go-ssr. DO NOT EDIT.

package pages

import (
	"context"
	"io"

	"github.com/sergei-svistunov/go-ssr/pkg/mux"
)

type RouteData struct {
	TabClass func(string) string
	Title    func() string
	User     User
}

type RouteDataProvider interface {
	GetRouteRootData(ctx context.Context, r *mux.Request, w mux.ResponseWriter, data *RouteData) error
}

type Route[DataProvider RouteDataProvider] struct{}

func (Route[DataProvider]) GetDataContext(ctx context.Context, r *mux.Request, w mux.ResponseWriter, dp DataProvider, child mux.DataContext) (mux.DataContext, error) {
	var (
		dataCtx = &dataContext{RouteDataContext: mux.RouteDataContext{
			Child: child,
			Assets: []string{
				"<script defer=\"defer\" src=\"/static/js/bootstrap.9e956bb5a71942fc3218.js\"></script>",
				"<script defer=\"defer\" src=\"/static/js/vendors.c44cd0e6d374429cb0f9.js\"></script>",
				"<link href=\"/static/css/vendors-node_modules_bootstrap-icons_font_bootstrap-icons_min_css.89597b09c5e69f3d5f80.css\" rel=\"stylesheet\">",
				"<link href=\"/static/css/main.a39f9b1eb5039bcdef96.css\" rel=\"stylesheet\">",
				"<script defer=\"defer\" src=\"/static/js/main.a39f9b1eb5039bcdef96.js\"></script>",
			},
		}}
	)
	if err := dp.GetRouteRootData(ctx, r, w, &dataCtx.RouteData); err != nil {
		return nil, err
	}
	return dataCtx, nil
}

func (Route[DataProvider]) GetDefaultSubRoute(ctx context.Context, r *mux.Request, dp DataProvider) (string, error) {
	return "/home", nil
}

type dataContext struct {
	mux.RouteDataContext
	RouteData
}

func (c *dataContext) Write(w io.Writer) error {
//line index.html:3
	tabClass := c.RouteData.TabClass
//line index.html:1
	title := c.RouteData.Title
//line index.html:2
	user := c.RouteData.User
	if _, err := w.Write(_ih6sotos4oudo4r9t9hoo62mqj762plinq1d7odcqq6a9abn9fo0); err != nil {
		return err
	}
//line index.html:9
	if _, err := mux.WriteHtmlEscaped(w, title()); err != nil {
		return err
	}
	if _, err := w.Write(_dgmopuqgthudu2l7nmq1h82v1mgu1rfmgqtg2ll1cseherftj1ug); err != nil {
		return err
	}
	if err := c.WriteAssets(w, map[string]struct{}{}); err != nil {
		return err
	}
	if _, err := w.Write(_spf8el7vafiaenuee4efa2n36tn2t5capk4731onl1vnvpi1q490); err != nil {
		return err
	}
//line index.html:23
	if _, err := mux.WriteHtmlEscaped(w, tabClass("/home")); err != nil {
		return err
	}
	if _, err := w.Write(_vagrus5hh21bk8j87j4sg9bm147799ftr4ephvo0omnaf766vgk0); err != nil {
		return err
	}
//line index.html:24
	if _, err := mux.WriteHtmlEscaped(w, tabClass("/users")); err != nil {
		return err
	}
	if _, err := w.Write(_4bskmp9ee9iul42e2b262jf9e5o4uk4ri74ifod6721obg1afla0); err != nil {
		return err
	}
//line index.html:29
	if _, err := mux.WriteHtmlEscaped(w, user.Image); err != nil {
		return err
	}
	if _, err := w.Write(_2d0ca660vp2c47gph10rt485jlqjs05l0q6qod5ust4p52ioksd0); err != nil {
		return err
	}
//line index.html:29
	if _, err := mux.WriteHtmlEscaped(w, user.Name); err != nil {
		return err
	}
	if _, err := w.Write(_f16knd9bjio5q8q7il1qoc09h68g513ep2num1pp1e8245oncbhg); err != nil {
		return err
	}
//line index.html:30
	if _, err := mux.WriteHtmlEscaped(w, user.Name); err != nil {
		return err
	}
	if _, err := w.Write(_ecttd6590fc64olum59u0tk2ts6kk6hjjok8nr9cdfmsr5jm490g); err != nil {
		return err
	}
	if c.Child != nil {
		err := c.Child.Write(w)
		if err != nil {
			return err
		}
	}
	if _, err := w.Write(_ots2ftc7308j2ksvbvfqfq0vtlhehb8p0oj080iilut1hiigs640); err != nil {
		return err
	}
//line index.html:41
	if _, err := mux.WriteHtmlEscaped(w, title); err != nil {
		return err
	}
	if _, err := w.Write(_vc28gchcaj716uburf9vls7go0o4g3436pbu17odavipf0jdl5b0); err != nil {
		return err
	}
	return nil
}

var (
	_2d0ca660vp2c47gph10rt485jlqjs05l0q6qod5ust4p52ioksd0 = []byte{
		0x22, 0x20, 0x61, 0x6c, 0x74, 0x3d, 0x22,
	}
	_4bskmp9ee9iul42e2b262jf9e5o4uk4ri74ifod6721obg1afla0 = []byte{
		0x22, 0x20, 0x61, 0x72, 0x69, 0x61, 0x2d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x22, 0x70, 0x61, 0x67, 0x65, 0x22, 0x20, 0x68, 0x72,
		0x65, 0x66, 0x3d, 0x22, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x3e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x3c, 0x2f, 0x61, 0x3e, 0x0a, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72,
		0x2d, 0x6e, 0x61, 0x76, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
		0x73, 0x70, 0x61, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d, 0x74, 0x65, 0x78, 0x74, 0x22,
		0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69,
		0x6d, 0x67, 0x20, 0x73, 0x72, 0x63, 0x3d, 0x22,
	}
	_dgmopuqgthudu2l7nmq1h82v1mgu1rfmgqtg2ll1cseherftj1ug = []byte{
		0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
	}
	_ecttd6590fc64olum59u0tk2ts6kk6hjjok8nr9cdfmsr5jm490g = []byte{
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x3e,
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x3c, 0x2f,
		0x6e, 0x61, 0x76, 0x3e, 0x0a, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
		0x65, 0x72, 0x2d, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
	}
	_f16knd9bjio5q8q7il1qoc09h68g513ep2num1pp1e8245oncbhg = []byte{
		0x22, 0x20, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3d, 0x22, 0x32, 0x34, 0x22, 0x20, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3d, 0x22, 0x32, 0x34, 0x22,
		0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x64, 0x2d, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x61,
		0x6c, 0x69, 0x67, 0x6e, 0x2d, 0x74, 0x65, 0x78, 0x74, 0x2d, 0x74, 0x6f, 0x70, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	}
	_ih6sotos4oudo4r9t9hoo62mqj762plinq1d7odcqq6a9abn9fo0 = []byte{
		0x0a, 0x0a, 0x0a, 0x0a, 0x3c, 0x21, 0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45, 0x20, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0x0a, 0x3c, 0x68, 0x74, 0x6d,
		0x6c, 0x20, 0x6c, 0x61, 0x6e, 0x67, 0x3d, 0x22, 0x65, 0x6e, 0x22, 0x3e, 0x0a, 0x3c, 0x68, 0x65, 0x61, 0x64, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
		0x3c, 0x6d, 0x65, 0x74, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x3d, 0x22, 0x55, 0x54, 0x46, 0x2d, 0x38, 0x22, 0x3e, 0x0a, 0x20,
		0x20, 0x20, 0x20, 0x3c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e,
	}
	_ots2ftc7308j2ksvbvfqfq0vtlhehb8p0oj080iilut1hiigs640 = []byte{
		0x0a, 0x3c, 0x2f, 0x64, 0x69, 0x76, 0x3e, 0x0a, 0x0a, 0x3c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f,
		0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x28, 0x22, 0x54, 0x65, 0x73, 0x74, 0x20, 0x3c, 0x31, 0x32, 0x33, 0x3e, 0x20,
	}
	_spf8el7vafiaenuee4efa2n36tn2t5capk4731onl1vnvpi1q490 = []byte{
		0x0a, 0x3c, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x3e, 0x0a, 0x3c, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0x0a, 0x0a, 0x3c, 0x6e, 0x61, 0x76, 0x20, 0x63, 0x6c,
		0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x20, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d, 0x65, 0x78, 0x70, 0x61, 0x6e,
		0x64, 0x2d, 0x6d, 0x64, 0x20, 0x62, 0x67, 0x2d, 0x62, 0x6f, 0x64, 0x79, 0x2d, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x22, 0x3e, 0x0a,
		0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
		0x72, 0x2d, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x61, 0x20, 0x63, 0x6c, 0x61,
		0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x20, 0x68, 0x72, 0x65, 0x66, 0x3d, 0x22,
		0x2f, 0x22, 0x3e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3c, 0x2f, 0x61, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
		0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d, 0x74, 0x6f, 0x67,
		0x67, 0x6c, 0x65, 0x72, 0x22, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x20, 0x64, 0x61, 0x74, 0x61,
		0x2d, 0x62, 0x73, 0x2d, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x3d, 0x22, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x22, 0x20, 0x64, 0x61,
		0x74, 0x61, 0x2d, 0x62, 0x73, 0x2d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x3d, 0x22, 0x23, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x53, 0x75, 0x70,
		0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x20, 0x61, 0x72, 0x69, 0x61, 0x2d, 0x63, 0x6f, 0x6e, 0x74,
		0x72, 0x6f, 0x6c, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e,
		0x74, 0x65, 0x6e, 0x74, 0x22, 0x20, 0x61, 0x72, 0x69, 0x61, 0x2d, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x3d, 0x22, 0x66, 0x61, 0x6c,
		0x73, 0x65, 0x22, 0x20, 0x61, 0x72, 0x69, 0x61, 0x2d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3d, 0x22, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 0x6e,
		0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x3c, 0x73, 0x70, 0x61, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d, 0x74, 0x6f, 0x67, 0x67,
		0x6c, 0x65, 0x72, 0x2d, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x3e, 0x3c, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x3c, 0x2f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76,
		0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x20, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d,
		0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x22, 0x20, 0x69, 0x64, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x53, 0x75, 0x70, 0x70,
		0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x3c, 0x64, 0x69, 0x76, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2d, 0x6e, 0x61,
		0x76, 0x20, 0x6d, 0x65, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x20, 0x6d, 0x62, 0x2d, 0x32, 0x20, 0x6d, 0x62, 0x2d, 0x6d, 0x64, 0x2d, 0x30, 0x22, 0x3e,
		0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x61, 0x20, 0x63, 0x6c, 0x61, 0x73,
		0x73, 0x3d, 0x22, 0x6e, 0x61, 0x76, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x20,
	}
	_vagrus5hh21bk8j87j4sg9bm147799ftr4ephvo0omnaf766vgk0 = []byte{
		0x22, 0x20, 0x61, 0x72, 0x69, 0x61, 0x2d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x22, 0x70, 0x61, 0x67, 0x65, 0x22, 0x20, 0x68, 0x72,
		0x65, 0x66, 0x3d, 0x22, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x22, 0x3e, 0x48, 0x6f, 0x6d, 0x65, 0x3c, 0x2f, 0x61, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x61, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x3d, 0x22, 0x6e, 0x61,
		0x76, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x20,
	}
	_vc28gchcaj716uburf9vls7go0o4g3436pbu17odavipf0jdl5b0 = []byte{
		0x22, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x61, 0x20, 0x3d, 0x20, 0x31, 0x30, 0x2c, 0x20, 0x62, 0x20, 0x3d,
		0x20, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x61, 0x3c, 0x62, 0x3e, 0x31, 0x30, 0x29, 0x20, 0x7b, 0x7d, 0x0a,
		0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3e, 0x0a, 0x3c, 0x2f, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0x0a, 0x3c, 0x2f, 0x68, 0x74, 0x6d, 0x6c,
		0x3e,
	}
)
